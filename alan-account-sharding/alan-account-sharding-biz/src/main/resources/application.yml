spring:
  shardingsphere:
    mode:
      type: Memory
    props:
      #设置sql是否展示
      sql-show: true
    datasource:
      #数据库名称（可以与数据库中的库名不一致）
      names: alan_account_00,alan_account_01
      alan_account_00:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${mysql-ip:127.0.0.1}:3306/alan_account_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
        username: alan
        password: alan123
        # 数据库连接池的最小连接数
        # min-idle: 5
        # 初始化连接数
        # initial-size: 5
        # 最大连接数
        # max-total: 5
        # max-wait-millis: 200s
      alan_account_01:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${mysql-ip:127.0.0.1}:3306/alan_account_01?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
        username: alan
        password: alan123
        # 数据库连接池的最小连接数
        # min-idle: 5
        # 初始化连接数
        # initial-size: 5
        # 最大连接数
        # max-total: 5
        # max-wait-millis: 200s

    # 规则配置
    rules:
      sharding:
        # 分片算法配置
        sharding-algorithms:
          database-inline:
            # 分片算法类型 https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/sharding/
            type: INLINE
            props:
              # 分片算法的行表达式
              algorithm-expression: alan_account_0$->{account_id % 2}
          table-inline:
            # 分片算法类型 https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/sharding/
            type: INLINE
            props:
              # 分片算法的行表达式
              algorithm-expression: t_account_0$->{account_id % 3}
        # 分布式序列算法配置
        key-generators:
          snowflake:
            # 分布式序列算法（雪花算法：SNOWFLAKE； UUID：UUID）
            type: SNOWFLAKE
            # 分布式序列算法属性配置
            props:
              # 工作机器唯一标识
              worker-id: 123
        tables:
          # 逻辑表名称
          t_account:
            # 行表达式标识符可以使用 ${...} 或 $->{...}，但前者与 Spring 本身的属性文件占位符冲突，因此在 Spring 环境中使用行表达式标识符建议使用 $->{...}
            actual-data-nodes: alan_account_0$->{0..1}.t_account_0$->{0..2}
            # 分表策略
            table-strategy:
              standard:
                # 分片列名称
                sharding-column: account_id
                # 分片算法名称
                sharding-algorithm-name: table-inline
            # 表主键算法
            key-generate-strategy:
              column: account_id
              key-generator-name: snowflake
        default-database-strategy:
          standard:
            sharding-column: account_id
            sharding-algorithm-name: database-inline
