server.port=9006
spring.profiles.active=dev
spring.application.name=alan-account-sharding
# nacos \u914D\u7F6E/\u6CE8\u518C\u4E2D\u5FC3\u5730\u5740
spring.cloud.nacos.discovery.server-addr=${nacos-ip:127.0.0.1}:8848
spring.cloud.nacos.config.server-addr=${nacos-ip:127.0.0.1}:8848
spring.cloud.nacos.config.file-extension=properties
# Admin\u76D1\u63A7\u4E2D\u5FC3
spring.boot.admin.client.url=http://${admin-ip:127.0.0.1}:9000
management.endpoints.web.exposure.include=*
spring.boot.admin.client.instance.service-base-url=http://${admin-ip:127.0.0.1}:${server.port}
# sentinel
spring.cloud.sentinel.transport.dashboard=${sentinel-ip:127.0.0.1}:8858
feign.sentinel.enabled=true
# Hikari\u8FDE\u63A5\u6C60\u914D\u7F6E\uFF08\u8FDE\u63A5\u914D\u7F6E\u88AB\uFF09
#spring.datasource.url=jdbc:mysql://${mysql-ip:127.0.0.1}:3306/alan_account?characterEncoding=UTF-8&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&rewriteBatchedStatements=true
#spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.hikari.username=${mysql-user:alan}
#spring.datasource.hikari.password=${mysql-pass:alan123}
## \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CSpringBoot2.0\u5305\u542BHikariDataSource
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# \u6700\u5C0F\u8FDE\u63A5\u6570
spring.datasource.hikari.minimum-idle=5
# \u6700\u5927\u8FDE\u63A5\u6570
spring.datasource.hikari.maximum-pool-size=15
# \u81EA\u52A8\u63D0\u4EA4
spring.datasource.hikari.auto-commit=true
# \u4E00\u4E2A\u8FDE\u63A5idle\u72B6\u6001\u7684\u6700\u5927\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u5219\u88AB\u91CA\u653E\uFF08retired\uFF09\uFF0C\u9ED8\u8BA4:10\u5206\u949F 30000
spring.datasource.hikari.idle-timeout=600000
# \u8FDE\u63A5\u6C60\u540D\u5B57
spring.datasource.hikari.pool-name=DatebookHikariCP
# \u7B49\u5F85\u8FDE\u63A5\u6C60\u5206\u914D\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u957F\u8FD8\u6CA1\u53EF\u7528\u7684\u8FDE\u63A5\u5219\u53D1\u751FSQLException\uFF0C \u9ED8\u8BA4:30\u79D2
spring.datasource.hikari.connection-timeout=30000
# \u4E00\u4E2A\u8FDE\u63A5\u7684\u751F\u547D\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u800C\u4E14\u6CA1\u88AB\u4F7F\u7528\u5219\u88AB\u91CA\u653E\uFF08retired\uFF09\uFF0C\u9ED8\u8BA4:30\u5206\u949F 1800000ms\uFF0C\u5EFA\u8BAE\u8BBE\u7F6E\u6BD4\u6570\u636E\u5E93\u8D85\u65F6\u65F6\u957F\u5C1160\u79D2\uFF0C\u53C2\u8003MySQL wait_timeout\u53C2\u6570\uFF08show variables like '%timeout%';\uFF09
spring.datasource.hikari.max-lifetime=28740000
spring.datasource.hikari.connection-test-query=SELECT 1
# \u63A7\u5236\u53F0\u8F93\u51FAmybatis\u65E5\u5FD7
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# \u4FEE\u6539tomcat\u7EBF\u7A0B
#server.tomcat.accept-count=1000
#server.tomcat.max-connections=10000
#server.tomcat.threads.max=800
#server.tomcat.threads.min-spare=100
# sharding-jdbc\u914D\u7F6E
spring.shardingsphere.mode.type=Memory
#\u8BBE\u7F6Esql\u662F\u5426\u5C55\u793A
spring.shardingsphere.props.sql-show=true
#\u6570\u636E\u5E93\u540D\u79F0\uFF08\u53EF\u4EE5\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u5E93\u540D\u4E0D\u4E00\u81F4\uFF09
spring.shardingsphere.datasource.names=alan_account_00,alan_account_01
spring.shardingsphere.datasource.alan_account_00.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.alan_account_00.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.alan_account_00.url=jdbc:mysql://${mysql-ip:127.0.0.1}:3306/alan_account_00?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
spring.shardingsphere.datasource.alan_account_00.username=alan
spring.shardingsphere.datasource.alan_account_00.password=alan123
spring.shardingsphere.datasource.alan_account_01.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.alan_account_01.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.alan_account_01.url=jdbc:mysql://${mysql-ip:127.0.0.1}:3306/alan_account_01?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
spring.shardingsphere.datasource.alan_account_01.username=alan
spring.shardingsphere.datasource.alan_account_01.password=alan123
# \u5206\u7247\u7B97\u6CD5\u914D\u7F6E\uFF0C\u7C7B\u578B\uFF0C\u8868\u8FBE\u5F0F https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/sharding/
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=alan_account_0$->{account_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_account_0$->{account_id % 3}
# \u5206\u5E03\u5F0F\u5E8F\u5217\u7B97\u6CD5\uFF08\u96EA\u82B1\u7B97\u6CD5\uFF1ASNOWFLAKE\uFF1B UUID\uFF1AUUID\uFF09\uFF0C\u7B97\u6CD5\u5C5E\u6027\u914D\u7F6E\uFF0C\u5DE5\u4F5C\u673A\u5668\u552F\u4E00\u6807\u8BC6
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
# \u5206\u8868\u7B56\u7565
# \u903B\u8F91\u8868\u540D\u79F0t_account\uFF0C\u884C\u8868\u8FBE\u5F0F\u6807\u8BC6\u7B26\u53EF\u4EE5\u4F7F\u7528 ${...} \u6216 $->{...}\uFF0C\u4F46\u524D\u8005\u4E0E Spring \u672C\u8EAB\u7684\u5C5E\u6027\u6587\u4EF6\u5360\u4F4D\u7B26\u51B2\u7A81\uFF0C\u56E0\u6B64\u5728 Spring \u73AF\u5883\u4E2D\u4F7F\u7528\u884C\u8868\u8FBE\u5F0F\u6807\u8BC6\u7B26\u5EFA\u8BAE\u4F7F\u7528 $->{...}
# \u8868\u4E3B\u952E\u7B97\u6CD5
spring.shardingsphere.rules.sharding.tables.t_account.actual-data-nodes=alan_account_0$->{0..1}.t_account_0$->{0..2}
spring.shardingsphere.rules.sharding.tables.t_account.table-strategy.standard.sharding-column=account_id
spring.shardingsphere.rules.sharding.tables.t_account.table-strategy.standard.sharding-algorithm-name=table-inline
spring.shardingsphere.rules.sharding.tables.t_account.key-generate-strategy.column=account_id
spring.shardingsphere.rules.sharding.tables.t_account.key-generate-strategy.key-generator-name=snowflake
# \u5206\u5E93\u7B56\u7565
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=account_id
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
